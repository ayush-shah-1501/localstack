{
  "tests/aws/services/stepfunctions/v2/test_state/test_test_state_scenarios.py::TestStateCaseScenarios::test_base_pass_info": {
    "recorded-date": "31-01-2024, 15:59:17",
    "recorded-content": {
      "test_case_output": {
        "output": {
          "Value": "HelloWorld"
        },
        "status": "SUCCEEDED",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/stepfunctions/v2/test_state/test_test_state_scenarios.py::TestStateCaseScenarios::test_base_pass_debug": {
    "recorded-date": "31-01-2024, 15:59:30",
    "recorded-content": {
      "test_case_output": {
        "inspectionData": {
          "afterInputPath": {
            "Value": "HelloWorld"
          },
          "afterParameters": {
            "Value": "HelloWorld"
          },
          "afterResultPath": {
            "Value": "HelloWorld"
          },
          "afterResultSelector": {
            "Value": "HelloWorld"
          },
          "input": {
            "Value": "HelloWorld"
          }
        },
        "output": {
          "Value": "HelloWorld"
        },
        "status": "SUCCEEDED",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/stepfunctions/v2/test_state/test_test_state_scenarios.py::TestStateCaseScenarios::test_base_pass_trace": {
    "recorded-date": "31-01-2024, 15:59:42",
    "recorded-content": {
      "test_case_output": {
        "inspectionData": {
          "afterInputPath": {
            "Value": "HelloWorld"
          },
          "afterParameters": {
            "Value": "HelloWorld"
          },
          "afterResultPath": {
            "Value": "HelloWorld"
          },
          "afterResultSelector": {
            "Value": "HelloWorld"
          },
          "input": {
            "Value": "HelloWorld"
          }
        },
        "output": {
          "Value": "HelloWorld"
        },
        "status": "SUCCEEDED",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/stepfunctions/v2/test_state/test_test_state_scenarios.py::TestStateCaseScenarios::test_base_result_pass_info": {
    "recorded-date": "31-01-2024, 15:59:55",
    "recorded-content": {
      "test_case_output": {
        "output": {
          "resultKey": "result value"
        },
        "status": "SUCCEEDED",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/stepfunctions/v2/test_state/test_test_state_scenarios.py::TestStateCaseScenarios::test_base_result_pass_debug": {
    "recorded-date": "31-01-2024, 16:00:07",
    "recorded-content": {
      "test_case_output": {
        "inspectionData": {
          "afterResultPath": {
            "resultKey": "result value"
          },
          "afterResultSelector": {
            "resultKey": "result value"
          },
          "input": {
            "Value": "HelloWorld"
          },
          "result": {
            "resultKey": "result value"
          }
        },
        "output": {
          "resultKey": "result value"
        },
        "status": "SUCCEEDED",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/stepfunctions/v2/test_state/test_test_state_scenarios.py::TestStateCaseScenarios::test_base_result_pass_trace": {
    "recorded-date": "31-01-2024, 16:00:14",
    "recorded-content": {
      "test_case_output": {
        "inspectionData": {
          "afterResultPath": {
            "resultKey": "result value"
          },
          "afterResultSelector": {
            "resultKey": "result value"
          },
          "input": {
            "Value": "HelloWorld"
          },
          "result": {
            "resultKey": "result value"
          }
        },
        "output": {
          "resultKey": "result value"
        },
        "status": "SUCCEEDED",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/stepfunctions/v2/test_state/test_test_state_scenarios.py::TestStateCaseScenarios::test_io_pass_info": {
    "recorded-date": "31-01-2024, 16:00:27",
    "recorded-content": {
      "test_case_output": {
        "output": {
          "initialData": {
            "fieldFromInput": "value from input",
            "otherField": "other value"
          },
          "unrelatedData": {
            "someOtherField": 1234
          },
          "modifiedData": {
            "staticValue": "some value",
            "inputValue": "value from input"
          }
        },
        "status": "SUCCEEDED",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/stepfunctions/v2/test_state/test_test_state_scenarios.py::TestStateCaseScenarios::test_io_pass_debug": {
    "recorded-date": "31-01-2024, 16:00:39",
    "recorded-content": {
      "test_case_output": {
        "inspectionData": {
          "afterInputPath": {
            "fieldFromInput": "value from input",
            "otherField": "other value"
          },
          "afterParameters": {
            "staticValue": "some value",
            "inputValue": "value from input"
          },
          "afterResultPath": {
            "initialData": {
              "fieldFromInput": "value from input",
              "otherField": "other value"
            },
            "unrelatedData": {
              "someOtherField": 1234
            },
            "modifiedData": {
              "staticValue": "some value",
              "inputValue": "value from input"
            }
          },
          "afterResultSelector": {
            "staticValue": "some value",
            "inputValue": "value from input"
          },
          "input": {
            "initialData": {
              "fieldFromInput": "value from input",
              "otherField": "other value"
            },
            "unrelatedData": {
              "someOtherField": 1234
            }
          }
        },
        "output": {
          "initialData": {
            "fieldFromInput": "value from input",
            "otherField": "other value"
          },
          "unrelatedData": {
            "someOtherField": 1234
          },
          "modifiedData": {
            "staticValue": "some value",
            "inputValue": "value from input"
          }
        },
        "status": "SUCCEEDED",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/stepfunctions/v2/test_state/test_test_state_scenarios.py::TestStateCaseScenarios::test_io_pass_trace": {
    "recorded-date": "31-01-2024, 16:00:52",
    "recorded-content": {
      "test_case_output": {
        "inspectionData": {
          "afterInputPath": {
            "fieldFromInput": "value from input",
            "otherField": "other value"
          },
          "afterParameters": {
            "staticValue": "some value",
            "inputValue": "value from input"
          },
          "afterResultPath": {
            "initialData": {
              "fieldFromInput": "value from input",
              "otherField": "other value"
            },
            "unrelatedData": {
              "someOtherField": 1234
            },
            "modifiedData": {
              "staticValue": "some value",
              "inputValue": "value from input"
            }
          },
          "afterResultSelector": {
            "staticValue": "some value",
            "inputValue": "value from input"
          },
          "input": {
            "initialData": {
              "fieldFromInput": "value from input",
              "otherField": "other value"
            },
            "unrelatedData": {
              "someOtherField": 1234
            }
          }
        },
        "output": {
          "initialData": {
            "fieldFromInput": "value from input",
            "otherField": "other value"
          },
          "unrelatedData": {
            "someOtherField": 1234
          },
          "modifiedData": {
            "staticValue": "some value",
            "inputValue": "value from input"
          }
        },
        "status": "SUCCEEDED",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/stepfunctions/v2/test_state/test_test_state_scenarios.py::TestStateCaseScenarios::test_io_result_pass_info": {
    "recorded-date": "31-01-2024, 16:01:05",
    "recorded-content": {
      "test_case_output": {
        "output": {
          "initialData": {
            "fieldFromInput": "value from input",
            "otherField": "other value"
          },
          "unrelatedData": {
            "someOtherField": 1234
          },
          "modifiedData": {
            "resultKey": "result value"
          }
        },
        "status": "SUCCEEDED",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/stepfunctions/v2/test_state/test_test_state_scenarios.py::TestStateCaseScenarios::test_io_result_pass_debug": {
    "recorded-date": "31-01-2024, 16:01:18",
    "recorded-content": {
      "test_case_output": {
        "inspectionData": {
          "afterResultPath": {
            "initialData": {
              "fieldFromInput": "value from input",
              "otherField": "other value"
            },
            "unrelatedData": {
              "someOtherField": 1234
            },
            "modifiedData": {
              "resultKey": "result value"
            }
          },
          "afterResultSelector": {
            "resultKey": "result value"
          },
          "input": {
            "initialData": {
              "fieldFromInput": "value from input",
              "otherField": "other value"
            },
            "unrelatedData": {
              "someOtherField": 1234
            }
          },
          "result": {
            "resultKey": "result value"
          }
        },
        "output": {
          "initialData": {
            "fieldFromInput": "value from input",
            "otherField": "other value"
          },
          "unrelatedData": {
            "someOtherField": 1234
          },
          "modifiedData": {
            "resultKey": "result value"
          }
        },
        "status": "SUCCEEDED",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/stepfunctions/v2/test_state/test_test_state_scenarios.py::TestStateCaseScenarios::test_io_result_pass_trace": {
    "recorded-date": "31-01-2024, 16:01:30",
    "recorded-content": {
      "test_case_output": {
        "inspectionData": {
          "afterResultPath": {
            "initialData": {
              "fieldFromInput": "value from input",
              "otherField": "other value"
            },
            "unrelatedData": {
              "someOtherField": 1234
            },
            "modifiedData": {
              "resultKey": "result value"
            }
          },
          "afterResultSelector": {
            "resultKey": "result value"
          },
          "input": {
            "initialData": {
              "fieldFromInput": "value from input",
              "otherField": "other value"
            },
            "unrelatedData": {
              "someOtherField": 1234
            }
          },
          "result": {
            "resultKey": "result value"
          }
        },
        "output": {
          "initialData": {
            "fieldFromInput": "value from input",
            "otherField": "other value"
          },
          "unrelatedData": {
            "someOtherField": 1234
          },
          "modifiedData": {
            "resultKey": "result value"
          }
        },
        "status": "SUCCEEDED",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/stepfunctions/v2/test_state/test_test_state_scenarios.py::TestStateCaseScenarios::test_base_lambda_task_state_info": {
    "recorded-date": "31-01-2024, 16:01:55",
    "recorded-content": {
      "test_case_output": {
        "output": "\"HelloWorld!\"",
        "status": "SUCCEEDED",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/stepfunctions/v2/test_state/test_test_state_scenarios.py::TestStateCaseScenarios::test_base_lambda_task_state_debug": {
    "recorded-date": "31-01-2024, 16:02:10",
    "recorded-content": {
      "test_case_output": {
        "inspectionData": {
          "afterInputPath": {
            "inputData": "HelloWorld"
          },
          "afterParameters": {
            "inputData": "HelloWorld"
          },
          "afterResultPath": "\"HelloWorld!\"",
          "afterResultSelector": "\"HelloWorld!\"",
          "input": {
            "inputData": "HelloWorld"
          },
          "result": "\"HelloWorld!\""
        },
        "output": "\"HelloWorld!\"",
        "status": "SUCCEEDED",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/stepfunctions/v2/test_state/test_test_state_scenarios.py::TestStateCaseScenarios::test_base_lambda_task_state_trace": {
    "recorded-date": "31-01-2024, 16:02:25",
    "recorded-content": {
      "test_case_output": {
        "inspectionData": {
          "afterInputPath": {
            "inputData": "HelloWorld"
          },
          "afterParameters": {
            "inputData": "HelloWorld"
          },
          "afterResultPath": "\"HelloWorld!\"",
          "afterResultSelector": "\"HelloWorld!\"",
          "input": {
            "inputData": "HelloWorld"
          },
          "result": "\"HelloWorld!\""
        },
        "output": "\"HelloWorld!\"",
        "status": "SUCCEEDED",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/stepfunctions/v2/test_state/test_test_state_scenarios.py::TestStateCaseScenarios::test_base_lambda_service_task_state_info": {
    "recorded-date": "31-01-2024, 16:02:40",
    "recorded-content": {
      "test_case_output": {
        "output": {
          "ExecutedVersion": "$LATEST",
          "Payload": {},
          "SdkHttpMetadata": {
            "AllHttpHeaders": {
              "X-Amz-Executed-Version": [
                "$LATEST"
              ],
              "x-amzn-Remapped-Content-Length": [
                "0"
              ],
              "Connection": [
                "keep-alive"
              ],
              "x-amzn-RequestId": [
                "<uuid:1>"
              ],
              "Content-Length": [
                "2"
              ],
              "Date": "date",
              "X-Amzn-Trace-Id": "X-Amzn-Trace-Id",
              "Content-Type": [
                "application/json"
              ]
            },
            "HttpHeaders": {
              "Connection": "keep-alive",
              "Content-Length": "2",
              "Content-Type": "application/json",
              "Date": "date",
              "X-Amz-Executed-Version": "$LATEST",
              "x-amzn-Remapped-Content-Length": "0",
              "x-amzn-RequestId": "<uuid:1>",
              "X-Amzn-Trace-Id": "X-Amzn-Trace-Id"
            },
            "HttpStatusCode": 200
          },
          "SdkResponseMetadata": {
            "RequestId": "<uuid:1>"
          },
          "StatusCode": 200
        },
        "status": "SUCCEEDED",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/stepfunctions/v2/test_state/test_test_state_scenarios.py::TestStateCaseScenarios::test_base_lambda_service_task_state_debug": {
    "recorded-date": "31-01-2024, 16:02:54",
    "recorded-content": {
      "test_case_output": {
        "inspectionData": {
          "afterInputPath": {
            "FunctionName": "<lambda_function_name>",
            "Payload": null
          },
          "afterParameters": {
            "FunctionName": "<lambda_function_name>",
            "Payload": null
          },
          "afterResultPath": {
            "ExecutedVersion": "$LATEST",
            "Payload": {},
            "SdkHttpMetadata": {
              "AllHttpHeaders": {
                "X-Amz-Executed-Version": [
                  "$LATEST"
                ],
                "x-amzn-Remapped-Content-Length": [
                  "0"
                ],
                "Connection": [
                  "keep-alive"
                ],
                "x-amzn-RequestId": [
                  "<uuid:1>"
                ],
                "Content-Length": [
                  "2"
                ],
                "Date": "date",
                "X-Amzn-Trace-Id": "X-Amzn-Trace-Id",
                "Content-Type": [
                  "application/json"
                ]
              },
              "HttpHeaders": {
                "Connection": "keep-alive",
                "Content-Length": "2",
                "Content-Type": "application/json",
                "Date": "date",
                "X-Amz-Executed-Version": "$LATEST",
                "x-amzn-Remapped-Content-Length": "0",
                "x-amzn-RequestId": "<uuid:1>",
                "X-Amzn-Trace-Id": "X-Amzn-Trace-Id"
              },
              "HttpStatusCode": 200
            },
            "SdkResponseMetadata": {
              "RequestId": "<uuid:1>"
            },
            "StatusCode": 200
          },
          "afterResultSelector": {
            "ExecutedVersion": "$LATEST",
            "Payload": {},
            "SdkHttpMetadata": {
              "AllHttpHeaders": {
                "X-Amz-Executed-Version": [
                  "$LATEST"
                ],
                "x-amzn-Remapped-Content-Length": [
                  "0"
                ],
                "Connection": [
                  "keep-alive"
                ],
                "x-amzn-RequestId": [
                  "<uuid:1>"
                ],
                "Content-Length": [
                  "2"
                ],
                "Date": "date",
                "X-Amzn-Trace-Id": "X-Amzn-Trace-Id",
                "Content-Type": [
                  "application/json"
                ]
              },
              "HttpHeaders": {
                "Connection": "keep-alive",
                "Content-Length": "2",
                "Content-Type": "application/json",
                "Date": "date",
                "X-Amz-Executed-Version": "$LATEST",
                "x-amzn-Remapped-Content-Length": "0",
                "x-amzn-RequestId": "<uuid:1>",
                "X-Amzn-Trace-Id": "X-Amzn-Trace-Id"
              },
              "HttpStatusCode": 200
            },
            "SdkResponseMetadata": {
              "RequestId": "<uuid:1>"
            },
            "StatusCode": 200
          },
          "input": {
            "FunctionName": "<lambda_function_name>",
            "Payload": null
          },
          "result": {
            "ExecutedVersion": "$LATEST",
            "Payload": {},
            "SdkHttpMetadata": {
              "AllHttpHeaders": {
                "X-Amz-Executed-Version": [
                  "$LATEST"
                ],
                "x-amzn-Remapped-Content-Length": [
                  "0"
                ],
                "Connection": [
                  "keep-alive"
                ],
                "x-amzn-RequestId": [
                  "<uuid:1>"
                ],
                "Content-Length": [
                  "2"
                ],
                "Date": "date",
                "X-Amzn-Trace-Id": "X-Amzn-Trace-Id",
                "Content-Type": [
                  "application/json"
                ]
              },
              "HttpHeaders": {
                "Connection": "keep-alive",
                "Content-Length": "2",
                "Content-Type": "application/json",
                "Date": "date",
                "X-Amz-Executed-Version": "$LATEST",
                "x-amzn-Remapped-Content-Length": "0",
                "x-amzn-RequestId": "<uuid:1>",
                "X-Amzn-Trace-Id": "X-Amzn-Trace-Id"
              },
              "HttpStatusCode": 200
            },
            "SdkResponseMetadata": {
              "RequestId": "<uuid:1>"
            },
            "StatusCode": 200
          }
        },
        "output": {
          "ExecutedVersion": "$LATEST",
          "Payload": {},
          "SdkHttpMetadata": {
            "AllHttpHeaders": {
              "X-Amz-Executed-Version": [
                "$LATEST"
              ],
              "x-amzn-Remapped-Content-Length": [
                "0"
              ],
              "Connection": [
                "keep-alive"
              ],
              "x-amzn-RequestId": [
                "<uuid:1>"
              ],
              "Content-Length": [
                "2"
              ],
              "Date": "date",
              "X-Amzn-Trace-Id": "X-Amzn-Trace-Id",
              "Content-Type": [
                "application/json"
              ]
            },
            "HttpHeaders": {
              "Connection": "keep-alive",
              "Content-Length": "2",
              "Content-Type": "application/json",
              "Date": "date",
              "X-Amz-Executed-Version": "$LATEST",
              "x-amzn-Remapped-Content-Length": "0",
              "x-amzn-RequestId": "<uuid:1>",
              "X-Amzn-Trace-Id": "X-Amzn-Trace-Id"
            },
            "HttpStatusCode": 200
          },
          "SdkResponseMetadata": {
            "RequestId": "<uuid:1>"
          },
          "StatusCode": 200
        },
        "status": "SUCCEEDED",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/stepfunctions/v2/test_state/test_test_state_scenarios.py::TestStateCaseScenarios::test_base_lambda_service_task_state_trace": {
    "recorded-date": "31-01-2024, 16:03:09",
    "recorded-content": {
      "test_case_output": {
        "inspectionData": {
          "afterInputPath": {
            "FunctionName": "<lambda_function_name>",
            "Payload": null
          },
          "afterParameters": {
            "FunctionName": "<lambda_function_name>",
            "Payload": null
          },
          "afterResultPath": {
            "ExecutedVersion": "$LATEST",
            "Payload": {},
            "SdkHttpMetadata": {
              "AllHttpHeaders": {
                "X-Amz-Executed-Version": [
                  "$LATEST"
                ],
                "x-amzn-Remapped-Content-Length": [
                  "0"
                ],
                "Connection": [
                  "keep-alive"
                ],
                "x-amzn-RequestId": [
                  "<uuid:1>"
                ],
                "Content-Length": [
                  "2"
                ],
                "Date": "date",
                "X-Amzn-Trace-Id": "X-Amzn-Trace-Id",
                "Content-Type": [
                  "application/json"
                ]
              },
              "HttpHeaders": {
                "Connection": "keep-alive",
                "Content-Length": "2",
                "Content-Type": "application/json",
                "Date": "date",
                "X-Amz-Executed-Version": "$LATEST",
                "x-amzn-Remapped-Content-Length": "0",
                "x-amzn-RequestId": "<uuid:1>",
                "X-Amzn-Trace-Id": "X-Amzn-Trace-Id"
              },
              "HttpStatusCode": 200
            },
            "SdkResponseMetadata": {
              "RequestId": "<uuid:1>"
            },
            "StatusCode": 200
          },
          "afterResultSelector": {
            "ExecutedVersion": "$LATEST",
            "Payload": {},
            "SdkHttpMetadata": {
              "AllHttpHeaders": {
                "X-Amz-Executed-Version": [
                  "$LATEST"
                ],
                "x-amzn-Remapped-Content-Length": [
                  "0"
                ],
                "Connection": [
                  "keep-alive"
                ],
                "x-amzn-RequestId": [
                  "<uuid:1>"
                ],
                "Content-Length": [
                  "2"
                ],
                "Date": "date",
                "X-Amzn-Trace-Id": "X-Amzn-Trace-Id",
                "Content-Type": [
                  "application/json"
                ]
              },
              "HttpHeaders": {
                "Connection": "keep-alive",
                "Content-Length": "2",
                "Content-Type": "application/json",
                "Date": "date",
                "X-Amz-Executed-Version": "$LATEST",
                "x-amzn-Remapped-Content-Length": "0",
                "x-amzn-RequestId": "<uuid:1>",
                "X-Amzn-Trace-Id": "X-Amzn-Trace-Id"
              },
              "HttpStatusCode": 200
            },
            "SdkResponseMetadata": {
              "RequestId": "<uuid:1>"
            },
            "StatusCode": 200
          },
          "input": {
            "FunctionName": "<lambda_function_name>",
            "Payload": null
          },
          "result": {
            "ExecutedVersion": "$LATEST",
            "Payload": {},
            "SdkHttpMetadata": {
              "AllHttpHeaders": {
                "X-Amz-Executed-Version": [
                  "$LATEST"
                ],
                "x-amzn-Remapped-Content-Length": [
                  "0"
                ],
                "Connection": [
                  "keep-alive"
                ],
                "x-amzn-RequestId": [
                  "<uuid:1>"
                ],
                "Content-Length": [
                  "2"
                ],
                "Date": "date",
                "X-Amzn-Trace-Id": "X-Amzn-Trace-Id",
                "Content-Type": [
                  "application/json"
                ]
              },
              "HttpHeaders": {
                "Connection": "keep-alive",
                "Content-Length": "2",
                "Content-Type": "application/json",
                "Date": "date",
                "X-Amz-Executed-Version": "$LATEST",
                "x-amzn-Remapped-Content-Length": "0",
                "x-amzn-RequestId": "<uuid:1>",
                "X-Amzn-Trace-Id": "X-Amzn-Trace-Id"
              },
              "HttpStatusCode": 200
            },
            "SdkResponseMetadata": {
              "RequestId": "<uuid:1>"
            },
            "StatusCode": 200
          }
        },
        "output": {
          "ExecutedVersion": "$LATEST",
          "Payload": {},
          "SdkHttpMetadata": {
            "AllHttpHeaders": {
              "X-Amz-Executed-Version": [
                "$LATEST"
              ],
              "x-amzn-Remapped-Content-Length": [
                "0"
              ],
              "Connection": [
                "keep-alive"
              ],
              "x-amzn-RequestId": [
                "<uuid:1>"
              ],
              "Content-Length": [
                "2"
              ],
              "Date": "date",
              "X-Amzn-Trace-Id": "X-Amzn-Trace-Id",
              "Content-Type": [
                "application/json"
              ]
            },
            "HttpHeaders": {
              "Connection": "keep-alive",
              "Content-Length": "2",
              "Content-Type": "application/json",
              "Date": "date",
              "X-Amz-Executed-Version": "$LATEST",
              "x-amzn-Remapped-Content-Length": "0",
              "x-amzn-RequestId": "<uuid:1>",
              "X-Amzn-Trace-Id": "X-Amzn-Trace-Id"
            },
            "HttpStatusCode": 200
          },
          "SdkResponseMetadata": {
            "RequestId": "<uuid:1>"
          },
          "StatusCode": 200
        },
        "status": "SUCCEEDED",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/stepfunctions/v2/test_state/test_test_state_scenarios.py::TestStateCaseScenarios::test_base_fail_info": {
    "recorded-date": "31-01-2024, 16:48:03",
    "recorded-content": {
      "test_case_output": {
        "cause": "This state machines raises a 'SomeFailure' failure.",
        "error": "SomeFailure",
        "status": "FAILED",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/stepfunctions/v2/test_state/test_test_state_scenarios.py::TestStateCaseScenarios::test_base_fail_debug": {
    "recorded-date": "31-01-2024, 16:49:22",
    "recorded-content": {
      "test_case_output": {
        "cause": "This state machines raises a 'SomeFailure' failure.",
        "error": "SomeFailure",
        "inspectionData": {
          "afterInputPath": {
            "Value": "HelloWorld"
          },
          "input": {
            "Value": "HelloWorld"
          }
        },
        "status": "FAILED",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/stepfunctions/v2/test_state/test_test_state_scenarios.py::TestStateCaseScenarios::test_base_fail_trace": {
    "recorded-date": "31-01-2024, 16:49:56",
    "recorded-content": {
      "test_case_output": {
        "cause": "This state machines raises a 'SomeFailure' failure.",
        "error": "SomeFailure",
        "inspectionData": {
          "afterInputPath": {
            "Value": "HelloWorld"
          },
          "input": {
            "Value": "HelloWorld"
          }
        },
        "status": "FAILED",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/stepfunctions/v2/test_state/test_test_state_scenarios.py::TestStateCaseScenarios::test_base_succeed_info": {
    "recorded-date": "31-01-2024, 16:52:15",
    "recorded-content": {
      "test_case_output": {
        "output": {
          "Value": "HelloWorld"
        },
        "status": "SUCCEEDED",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/stepfunctions/v2/test_state/test_test_state_scenarios.py::TestStateCaseScenarios::test_base_succeed_debug": {
    "recorded-date": "31-01-2024, 16:52:57",
    "recorded-content": {
      "test_case_output": {
        "inspectionData": {
          "afterInputPath": {
            "Value": "HelloWorld"
          },
          "input": {
            "Value": "HelloWorld"
          }
        },
        "output": {
          "Value": "HelloWorld"
        },
        "status": "SUCCEEDED",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/stepfunctions/v2/test_state/test_test_state_scenarios.py::TestStateCaseScenarios::test_base_succeed_trace": {
    "recorded-date": "31-01-2024, 16:53:18",
    "recorded-content": {
      "test_case_output": {
        "inspectionData": {
          "afterInputPath": {
            "Value": "HelloWorld"
          },
          "input": {
            "Value": "HelloWorld"
          }
        },
        "output": {
          "Value": "HelloWorld"
        },
        "status": "SUCCEEDED",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/stepfunctions/v2/test_state/test_test_state_scenarios.py::TestStateCaseScenarios::test_base_wait_info": {
    "recorded-date": "31-01-2024, 16:55:48",
    "recorded-content": {
      "test_case_output": {
        "output": {
          "Value": "HelloWorld"
        },
        "status": "SUCCEEDED",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/stepfunctions/v2/test_state/test_test_state_scenarios.py::TestStateCaseScenarios::test_base_wait_debug": {
    "recorded-date": "31-01-2024, 16:56:24",
    "recorded-content": {
      "test_case_output": {
        "inspectionData": {
          "afterInputPath": {
            "Value": "HelloWorld"
          },
          "input": {
            "Value": "HelloWorld"
          }
        },
        "output": {
          "Value": "HelloWorld"
        },
        "status": "SUCCEEDED",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/stepfunctions/v2/test_state/test_test_state_scenarios.py::TestStateCaseScenarios::test_base_wait_trace": {
    "recorded-date": "31-01-2024, 16:56:45",
    "recorded-content": {
      "test_case_output": {
        "inspectionData": {
          "afterInputPath": {
            "Value": "HelloWorld"
          },
          "input": {
            "Value": "HelloWorld"
          }
        },
        "output": {
          "Value": "HelloWorld"
        },
        "status": "SUCCEEDED",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/stepfunctions/v2/test_state/test_test_state_scenarios.py::TestStateCaseScenarios::test_base_choice_info": {
    "recorded-date": "31-01-2024, 20:51:16",
    "recorded-content": {
      "test_case_output": {
        "nextState": "ValueInTwenties",
        "output": {
          "type": "Private",
          "value": 22
        },
        "status": "SUCCEEDED",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/stepfunctions/v2/test_state/test_test_state_scenarios.py::TestStateCaseScenarios::test_base_choice_debug": {
    "recorded-date": "31-01-2024, 20:52:22",
    "recorded-content": {
      "test_case_output": {
        "inspectionData": {
          "afterInputPath": {
            "type": "Private",
            "value": 22
          },
          "input": {
            "type": "Private",
            "value": 22
          }
        },
        "nextState": "ValueInTwenties",
        "output": {
          "type": "Private",
          "value": 22
        },
        "status": "SUCCEEDED",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/stepfunctions/v2/test_state/test_test_state_scenarios.py::TestStateCaseScenarios::test_base_choice_trace": {
    "recorded-date": "31-01-2024, 20:52:58",
    "recorded-content": {
      "test_case_output": {
        "inspectionData": {
          "afterInputPath": {
            "type": "Private",
            "value": 22
          },
          "input": {
            "type": "Private",
            "value": 22
          }
        },
        "nextState": "ValueInTwenties",
        "output": {
          "type": "Private",
          "value": 22
        },
        "status": "SUCCEEDED",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  }
}
